{"mappings":"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","sources":["src/index.ts","src/es2015.ts","src/builtins/Array.from.ts","src/utils/testExpression.ts","src/builtins/Array.of.ts","src/builtins/Array.prototype.copyWithin.ts","src/builtins/Array.prototype.entries.ts","src/builtins/Array.prototype.fill.ts","src/builtins/Array.prototype.find.ts","src/builtins/Array.prototype.findIndex.ts","src/builtins/Array.prototype.keys.ts","src/builtins/ArrayBuffer.ts","src/builtins/atob.ts","src/builtins/btoa.ts","src/builtins/DataView.ts","src/builtins/Float32Array.ts","src/builtins/Float64Array.ts","src/builtins/Int8Array.ts","src/builtins/Int16Array.ts","src/builtins/Int32Array.ts","src/builtins/Map.ts","src/builtins/Math.acosh.ts","src/builtins/Math.asinh.ts","src/builtins/Math.cbrt.ts","src/builtins/Math.clz32.ts","src/builtins/Math.cosh.ts","src/builtins/Math.expm1.ts","src/builtins/Math.fround.ts","src/builtins/Math.hypot.ts","src/builtins/Math.imul.ts","src/builtins/Math.log1p.ts","src/builtins/Math.log2.ts","src/builtins/Math.log10.ts","src/builtins/Math.sign.ts","src/builtins/Math.sinh.ts","src/builtins/Math.tanh.ts","src/builtins/Math.trunc.ts","src/builtins/new.target.ts","src/builtins/Number.EPSILON.ts","src/builtins/Number.isFinite.ts","src/builtins/Number.isInteger.ts","src/builtins/Number.isNaN.ts","src/builtins/Number.isSafeInteger.ts","src/builtins/Number.MAX_SAFE_INTEGER.ts","src/builtins/Number.MIN_SAFE_INTEGER.ts","src/builtins/Number.parseInt.ts","src/builtins/Number.parseFloat.ts","src/builtins/Object.assign.ts","src/builtins/Object.getOwnPropertySymbols.ts","src/builtins/Object.is.ts","src/builtins/Object.prototype.__proto__.ts","src/builtins/Object.setPrototypeOf.ts","src/builtins/Promise.ts","src/builtins/Proxy.ts","src/builtins/Reflect.ts","src/builtins/RegExp.prototype.sticky.ts","src/builtins/Set.ts","src/builtins/String.fromCodePoint.ts","src/builtins/String.prototype.codePointAt.ts","src/builtins/String.prototype.endsWith.ts","src/builtins/String.prototype.includes.ts","src/builtins/String.prototype.normalize.ts","src/builtins/String.prototype.repeat.ts","src/builtins/String.prototype.startsWith.ts","src/builtins/String.raw.ts","src/builtins/Symbol.ts","src/builtins/Uint8Array.ts","src/builtins/Uint8ClampedArray.ts","src/builtins/Uint16Array.ts","src/builtins/Uint32Array.ts","src/builtins/WeakMap.ts","src/builtins/WeakSet.ts","src/syntax/arrowFunction.ts","src/syntax/binaryLiterals.ts","src/syntax/blockLevelFunctionDeclaration.ts","src/syntax/class.ts","src/syntax/computedProperty.ts","src/syntax/constLet.ts","src/syntax/defaultParameters.ts","src/syntax/destructuring.ts","src/syntax/forOf.ts","src/syntax/generatorFunction.ts","src/syntax/octalLiterals.ts","src/syntax/restParameters.ts","src/syntax/shorthandMethod.ts","src/syntax/shorthandProperty.ts","src/syntax/spreadArray.ts","src/syntax/spreadFunctionCall.ts","src/syntax/templateStrings.ts","src/es2016.ts","src/builtins/Array.prototype.includes.ts","src/builtins/Float32Array.prototype.includes.ts","src/builtins/Float64Array.prototype.includes.ts","src/builtins/Int8Array.prototype.includes.ts","src/builtins/Int16Array.prototype.includes.ts","src/builtins/Int32Array.prototype.includes.ts","src/builtins/Uint8Array.prototype.includes.ts","src/builtins/Uint8ClampedArray.prototype.includes.ts","src/builtins/Uint16Array.prototype.includes.ts","src/builtins/Uint32Array.prototype.includes.ts","src/syntax/exponentiationOperator.ts","src/syntax/nestedRestDestructuring.ts","src/syntax/restParameterDestructuring.ts","src/es2017.ts","src/builtins/Atomics.ts","src/builtins/Object.entries.ts","src/builtins/Object.getOwnPropertyDescriptors.ts","src/builtins/Object.values.ts","src/builtins/SharedArrayBuffer.ts","src/builtins/String.prototype.padEnd.ts","src/builtins/String.prototype.padStart.ts","src/syntax/asyncAwait.ts","src/syntax/trailingParameterCommas.ts","src/es2018.ts","src/builtins/Promise.prototype.finally.ts","src/builtins/RegExp.prototype.dotAll.ts","src/builtins/RegExp.prototype.unicode.ts","src/builtins/Symbol.asyncIterator.ts","src/syntax/objectSpreadProperties.ts","src/syntax/regExpLookbehindAssertions.ts","src/syntax/regExpNamedCaptureGroups.ts","src/syntax/TemplateLiteralRevision.ts","src/utils/index.ts","src/utils/allOk.ts"],"sourcesContent":["import es2015 from './es2015';\nimport es2016 from './es2016';\nimport es2017 from './es2017';\nimport es2018 from './es2018';\nimport {allOk, testExpression} from './utils'\n\nexport default {\n    es2015,\n    es2016,\n    es2017,\n    es2018,\n    allOk,\n    testExpression\n}","// Built-ins\nimport ArrayFrom from './builtins/Array.from';\nimport ArrayOf from './builtins/Array.of';\nimport ArrayPrototypeCopyWithin from './builtins/Array.prototype.copyWithin';\nimport ArrayPrototypeEntries from './builtins/Array.prototype.entries';\nimport ArrayPrototypeFill from './builtins/Array.prototype.fill';\nimport ArrayPrototypeFind from './builtins/Array.prototype.find';\nimport ArrayPrototypeFindIndex from './builtins/Array.prototype.findIndex';\nimport ArrayPrototypeKeys from './builtins/Array.prototype.keys';\nimport _ArrayBuffer from './builtins/ArrayBuffer';\nimport _atob from './builtins/atob';\nimport _btoa from './builtins/btoa';\nimport _DataView from './builtins/DataView';\nimport _Float32Array from './builtins/Float32Array';\nimport _Float64Array from './builtins/Float64Array';\nimport _Int8Array from './builtins/Int8Array';\nimport _Int16Array from './builtins/Int16Array';\nimport _Int32Array from './builtins/Int32Array';\nimport _Map from './builtins/Map';\nimport MathAcosh from './builtins/Math.acosh';\nimport MathAsinh from './builtins/Math.asinh';\nimport MathCbrt from './builtins/Math.cbrt';\nimport MathClz32 from './builtins/Math.clz32';\nimport MathCosh from './builtins/Math.cosh';\nimport MathExpm1 from './builtins/Math.expm1';\nimport MathFround from './builtins/Math.fround';\nimport MathHypot from './builtins/Math.hypot';\nimport MathImul from './builtins/Math.imul';\nimport MathLog1p from './builtins/Math.log1p';\nimport MathLog2 from './builtins/Math.log2';\nimport MathLog10 from './builtins/Math.log10';\nimport MathSign from './builtins/Math.sign';\nimport MathSinh from './builtins/Math.sinh';\nimport MathTanh from './builtins/Math.tanh';\nimport MathTrunc from './builtins/Math.trunc';\nimport newTarget from './builtins/new.target';\nimport NumberEpsilon from './builtins/Number.EPSILON';\nimport NumberIsFinite from './builtins/Number.isFinite';\nimport NumberIsInteger from './builtins/Number.isInteger';\nimport NumberIsNaN from './builtins/Number.isNaN';\nimport NumberIsSafeInteger from './builtins/Number.isSafeInteger';\nimport NumberMaxSafeInteger from './builtins/Number.MAX_SAFE_INTEGER';\nimport NumberMinSafeInteger from './builtins/Number.MIN_SAFE_INTEGER';\nimport NumberParseInt from './builtins/Number.parseInt';\nimport NumberParseFloat from './builtins/Number.parseFloat';\nimport ObjectAssign from './builtins/Object.assign';\nimport ObjectGetOwnPropertySymbols from './builtins/Object.getOwnPropertySymbols';\nimport ObjectIs from './builtins/Object.is';\nimport ObjectPrototypeProto from './builtins/Object.prototype.__proto__';\nimport ObjectSetPrototypeOf from './builtins/Object.setPrototypeOf';\nimport _Promise from './builtins/Promise';\nimport _Proxy from './builtins/Proxy';\nimport _Reflect from './builtins/Reflect';\nimport RegExpPrototypeSticky from './builtins/RegExp.prototype.sticky';\nimport _Set from './builtins/Set';\nimport StringFromCodePoint from './builtins/String.fromCodePoint';\nimport StringPrototypeCodePointAt from './builtins/String.prototype.codePointAt';\nimport StringPrototypeEndsWith from './builtins/String.prototype.endsWith';\nimport StringPrototypeIncludes from './builtins/String.prototype.includes';\nimport StringPrototypeNormalize from './builtins/String.prototype.normalize';\nimport StringPrototypeRepeat from './builtins/String.prototype.repeat';\nimport StringPrototypeStartsWith from './builtins/String.prototype.startsWith';\nimport StringRaw from './builtins/String.raw';\nimport _Symbol from './builtins/Symbol';\nimport _Uint8Array from './builtins/Uint8Array';\nimport _Uint8ClampedArray from './builtins/Uint8ClampedArray';\nimport _Uint16Array from './builtins/Uint16Array';\nimport _Uint32Array from './builtins/Uint32Array';\nimport _WeakMap from './builtins/WeakMap';\nimport _WeakSet from './builtins/WeakSet';\n\n// Syntax\nimport arrowFunction from './syntax/arrowFunction';\nimport binaryLiterals from './syntax/binaryLiterals';\nimport blockLevelFunctionDeclaration from './syntax/blockLevelFunctionDeclaration';\nimport _class from './syntax/class';\nimport computedProperty from './syntax/computedProperty';\nimport constLet from './syntax/constLet';\nimport defaultParameters from './syntax/defaultParameters';\nimport destructuring from './syntax/destructuring';\nimport forOf from './syntax/forOf';\nimport generatorFunction from './syntax/generatorFunction';\nimport octalLiterals from './syntax/octalLiterals';\nimport restParameters from './syntax/restParameters';\nimport shorthandMethod from './syntax/shorthandMethod';\nimport shorthandProperty from './syntax/shorthandProperty';\nimport spreadArray from './syntax/spreadArray';\nimport spreadFunctionCall from './syntax/spreadFunctionCall';\nimport templateStrings from './syntax/templateStrings';\n\n\n\nexport const builtins = () => ({\n  'Array.from': ArrayFrom(),\n  'Array.of': ArrayOf(),\n  'Array.prototype.copyWithin': ArrayPrototypeCopyWithin(),\n  'Array.prototype.entries': ArrayPrototypeEntries(),\n  'Array.prototype.fill': ArrayPrototypeFill(),\n  'Array.prototype.find': ArrayPrototypeFind(),\n  'Array.prototype.findIndex': ArrayPrototypeFindIndex(),\n  'Array.prototype.keys': ArrayPrototypeKeys(),\n  ArrayBuffer: _ArrayBuffer(),\n  atob: _atob(),\n  btoa: _btoa(),\n  DataView: _DataView(),\n  Float32Array: _Float32Array(),\n  Float64Array: _Float64Array(),\n  Int8Array: _Int8Array(),\n  Int16Array: _Int16Array(),\n  Int32Array: _Int32Array(),\n  Map: _Map(),\n  'Math.acosh': MathAcosh(),\n  'Math.asinh': MathAsinh(),\n  'Math.cosh': MathCosh(),\n  'Math.cbrt': MathCbrt(),\n  'Math.clz32': MathClz32(),\n  'Math.expm1': MathExpm1(),\n  'Math.fround': MathFround(),\n  'Math.hypot': MathHypot(),\n  'Math.imul': MathImul(),\n  'Math.log1p': MathLog1p(),\n  'Math.log2': MathLog2(),\n  'Math.log10': MathLog10(),\n  'Math.sign': MathSign(),\n  'Math.sinh': MathSinh(),\n  'Math.tanh': MathTanh(),\n  'Math.trunc': MathTrunc(),\n  'new.target': newTarget(),\n  'Number.EPSILON': NumberEpsilon(),\n  'Number.isFinite': NumberIsFinite(),\n  'Number.isInteger': NumberIsInteger(),\n  'Number.isNaN': NumberIsNaN(),\n  'Number.isSafeInteger': NumberIsSafeInteger(),\n  'Number.MAX_SAFE_INTEGER': NumberMaxSafeInteger(),\n  'Number.MIN_SAFE_INTEGER': NumberMinSafeInteger(),\n  'Number.parseInt': NumberParseInt(),\n  'Number.parseFloat': NumberParseFloat(),\n  'Object.assign': ObjectAssign(),\n  'Object.getOwnPropertySymbols': ObjectGetOwnPropertySymbols(),\n  'Object.is': ObjectIs(),\n  'Object.prototype.__proto__': ObjectPrototypeProto(),\n  'Object.setPrototypeOf': ObjectSetPrototypeOf(),\n  Promise: _Promise(),\n  Proxy: _Proxy(),\n  Reflect: _Reflect(),\n  'RegExp.prototype.sticky': RegExpPrototypeSticky(),\n  Set: _Set(),\n  'String.fromCodePoint': StringFromCodePoint(),\n  'String.prototype.codePointAt': StringPrototypeCodePointAt(),\n  'String.prototype.endsWith': StringPrototypeEndsWith(),\n  'String.prototype.includes': StringPrototypeIncludes(),\n  'String.prototype.normalize': StringPrototypeNormalize(),\n  'String.prototype.repeat': StringPrototypeRepeat(),\n  'String.prototype.startsWith': StringPrototypeStartsWith(),\n  'String.raw': StringRaw(),\n  Symbol: _Symbol(),\n  Uint8Array: _Uint8Array(),\n  Uint8ClampedArray: _Uint8ClampedArray(),\n  Uint16Array: _Uint16Array(),\n  Uint32Array: _Uint32Array(),\n  WeakMap: _WeakMap(),\n  WeakSet: _WeakSet()\n});\n\nexport const syntax = () => ({\n  arrowFunction: arrowFunction(),\n  binaryLiterals: binaryLiterals(),\n  blockLevelFunctionDeclaration: blockLevelFunctionDeclaration(),\n  _class: _class(),\n  computedProperty: computedProperty(),\n  constLet: constLet(),\n  defaultParameters: defaultParameters(),\n  destructuring: destructuring(),\n  forOf: forOf(),\n  generatorFunction: generatorFunction(),\n  octalLiterals: octalLiterals(),\n  restParameters: restParameters(),\n  shorthandMethod: shorthandMethod(),\n  shorthandProperty: shorthandProperty(),\n  spreadArray: spreadArray(),\n  spreadFunctionCall: spreadFunctionCall(),\n  templateStrings: templateStrings()\n});\n\n// All features\nexport default () => ({\n  ...builtins(),\n  ...syntax()\n});\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Array.from !== 'undefined'\";\nexport default () => testExpression(expression);\n","export default function testExpression(expression: string): boolean {\n  try {\n    return (new Function('\"use strict\";\\n' + expression))() !== false; // eslint-disable-line no-new-func\n  } catch {\n    return false;\n  }\n}\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Array.of !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof [].copyWithin !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof [].entries !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof [].fill !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof [].find !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof [].findIndex !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof [].keys !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ArrayBuffer !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof atob !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof btoa !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof DataView !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Float32Array !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Float64Array !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Int8Array !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Int16Array !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Int32Array !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Map !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.acosh !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.asinh !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.cbrt !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.clz32 !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.cosh !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.expm1 !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.fround !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.hypot !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.imul !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.log1p !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.log2 !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.log10 !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.sign !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.sinh !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.tanh !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Math.trunc !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = '(function() { return new.target })()';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Number.EPSILON !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Number.isFinite !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Number.isInteger !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Number.isNaN !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Number.isSafeInteger !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Number.MAX_SAFE_INTEGER !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Number.MIN_SAFE_INTEGER !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Number.parseInt !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Number.parseFloat !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Object.assign !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Object.getOwnPropertySymbols !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Object.is !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ({}).__proto__ !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Object.setPrototypeOf !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Promise !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Proxy !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Reflect !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'return /.*/y.sticky === true';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Set !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof String.fromCodePoint !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ''.codePointAt !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ''.endsWith !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ''.includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ''.normalize !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ''.repeat !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ''.startsWith !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof String.raw !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Symbol !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Uint8Array !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Uint8ClampedArray !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Uint16Array !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Uint32Array !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof WeakMap !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof WeakSet !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'var f=()=>{}';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = '0b00100001';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = '(function() {\"use strict\";function f() {return 1;} {function f() {return 2;}}if (f() === 2)throw new Error(\"Failed\");})();';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'class A {};class B extends A {}';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'var a=\"a\",o={[a]:1,[\"p\"]:2,[a+\"p\"]:3}';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'let a;const b=42;a=b';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'function t(a=1) {};t()';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'var {a:A,b:B=3}={a:1};var [a,b]=[1,2]';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'for(var i of [1,2,3]) {}';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'function* g(){}';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'f0o222';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'function t(a,...args) {}t(...[1,2,3]);t.call(this,...[1,2,3]);';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'var o={a(){}}';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'var a=2,o={a}';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'var a=[...[1,2]];var [...b]=a;';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'function t(a,b) {};t(...[1,2]);t.call(this,...[1,2])';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\n// eslint-disable-next-line no-template-curly-in-string\nexport const expression = 'function f(a, b) {return a[0]+(b+1)+a[1];}var s=`life=${40+2}`,t=f`a:${5}x`';\nexport default () => testExpression(expression);\n","// Built-ins\nimport ArrayIncludes from './builtins/Array.prototype.includes';\nimport Float32ArrayIncludes from './builtins/Float32Array.prototype.includes';\nimport Float64ArrayIncludes from './builtins/Float64Array.prototype.includes';\nimport Int8ArrayIncludes from './builtins/Int8Array.prototype.includes';\nimport Int16ArrayIncludes from './builtins/Int16Array.prototype.includes';\nimport Int32ArrayIncludes from './builtins/Int32Array.prototype.includes';\nimport Uint8ArrayIncludes from './builtins/Uint8Array.prototype.includes';\nimport Uint8ClampedArrayIncludes from './builtins/Uint8ClampedArray.prototype.includes';\nimport Uint16ArrayIncludes from './builtins/Uint16Array.prototype.includes';\nimport Uint32ArrayIncludes from './builtins/Uint32Array.prototype.includes';\n\n// Syntax\nimport exponentiationOperator from './syntax/exponentiationOperator';\nimport nestedRestDestructuring from './syntax/nestedRestDestructuring';\nimport restParameterDestructuring from './syntax/restParameterDestructuring';\n\n\n\nexport const builtins = () => ({\n  'Array.prototype.includes': ArrayIncludes(),\n  'Float32Array.prototype.includes': Float32ArrayIncludes(),\n  'Float64Array.prototype.includes': Float64ArrayIncludes(),\n  'Int8Array.prototype.includes': Int8ArrayIncludes(),\n  'Int16Array.prototype.includes': Int16ArrayIncludes(),\n  'Int32Array.prototype.includes': Int32ArrayIncludes(),\n  'Uint8Array.prototype.includes': Uint8ArrayIncludes(),\n  'Uint8ClampedArray.prototype.includes': Uint8ClampedArrayIncludes(),\n  'Uint16Array.prototype.includes': Uint16ArrayIncludes(),\n  'Uint32Array.prototype.includes': Uint32ArrayIncludes()\n});\n\nexport const syntax = () => ({\n  exponentiationOperator: exponentiationOperator(),\n  nestedRestDestructuring: nestedRestDestructuring(),\n  restParameterDestructuring: restParameterDestructuring()\n});\n\n// All features\nexport default () => ({\n  ...builtins(),\n  ...syntax()\n});\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof [].includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof (new Float32Array()).includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof (new Float64Array()).includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof (new Int8Array()).includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof (new Int16Array()).includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof (new Int32Array()).includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof (new Uint8Array()).includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof (new Uint8ClampedArray()).includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof (new Uint16Array()).includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof (new Uint32Array()).includes !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = '2**3';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'var {a:{b,c}}={a:{b:1,c:2}}';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'function f(a,{b:{c}},...[d,...e]){};f(1,{b: {c: 2}}, 3,4,5,6)';\nexport default () => testExpression(expression);\n","// Built-ins\nimport _Atomics from './builtins/Atomics';\nimport ObjectEntries from './builtins/Object.entries';\nimport ObjectGetOwnPropertyDescriptors from './builtins/Object.getOwnPropertyDescriptors';\nimport ObjectValues from './builtins/Object.values';\nimport _SharedArrayBuffer from './builtins/SharedArrayBuffer';\nimport StringPrototypePadEnd from './builtins/String.prototype.padEnd';\nimport StringPrototypePadStart from './builtins/String.prototype.padStart';\n\n// Syntax\nimport asyncAwait from './syntax/asyncAwait';\nimport trailingParameterCommas from './syntax/trailingParameterCommas';\n\n\n\nexport const builtins = () => ({\n  Atomics: _Atomics(),\n  'Object.entries': ObjectEntries(),\n  'Object.getOwnPropertyDescriptors': ObjectGetOwnPropertyDescriptors(),\n  'Object.values': ObjectValues(),\n  SharedArrayBuffer: _SharedArrayBuffer(),\n  'String.prototype.padEnd': StringPrototypePadEnd(),\n  'String.prototype.padStart': StringPrototypePadStart()\n});\n\nexport const syntax = () => ({\n  asyncAwait: asyncAwait(),\n  trailingParameterCommas: trailingParameterCommas()\n});\n\n// All features\nexport default () => ({\n  ...builtins(),\n  ...syntax()\n});\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Atomics !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Object.entries !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Object.getOwnPropertyDescriptors !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Object.values !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof SharedArrayBuffer !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ''.padEnd !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof ''.padStart !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'async function f(){var a = await Promise.resolve(42);return a};f()';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'function f(a,b,){};f()';\nexport default () => testExpression(expression);\n","// Built-ins\nimport PromisePrototypeFinally from './builtins/Promise.prototype.finally';\nimport RegExpPrototypeDotAll from './builtins/RegExp.prototype.dotAll';\nimport RegExpPrototypeUnicode from './builtins/RegExp.prototype.unicode';\nimport SymbolAsyncIterator from './builtins/Symbol.asyncIterator';\n\n// Syntax\nimport objectSpreadProperties from './syntax/objectSpreadProperties';\nimport regExpLookbehindAssertions from './syntax/regExpLookbehindAssertions';\nimport regExpNamedCaptureGroups from './syntax/regExpNamedCaptureGroups';\nimport TemplateLiteralRevision from './syntax/TemplateLiteralRevision';\n\n\n\nexport const builtins = () => ({\n  'Promise.prototype.finally': PromisePrototypeFinally(),\n  'RegExp.prototype.dotAll': RegExpPrototypeDotAll(),\n  'RegExp.prototype.unicode': RegExpPrototypeUnicode(),\n  'Symbol.asyncIterator': SymbolAsyncIterator()\n});\n\nexport const syntax = () => ({\n  objectSpreadProperties: objectSpreadProperties(),\n  regExpLookbehindAssertions: regExpLookbehindAssertions(),\n  regExpNamedCaptureGroups: regExpNamedCaptureGroups(),\n  TemplateLiteralRevision: TemplateLiteralRevision()\n});\n\n// All features\nexport default () => ({\n  ...builtins(),\n  ...syntax()\n});\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'return typeof Promise.prototype.finally !== \"undefined\"';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'return /.*/s.dotAll === true';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'return /\\\\u{61}/u.unicode === true';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = \"return typeof Symbol.asyncIterator !== 'undefined'\";\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'var a = {a:1}, b = {b:2}, c = { ...a, ...b }; var { ...d } = c';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = '~/src/(?<!a)b(?<=b)c/';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\nexport const expression = 'var r = /(?<a>a)\\\\k<a>/.exec(\"aa\"); return r && r.groups.a === \"a\"';\nexport default () => testExpression(expression);\n","import testExpression from '~/src/utils/testExpression';\n\n// eslint-disable-next-line no-template-curly-in-string\nexport const expression = '(t=>t)`\\\\uu ${1} \\\\xx`';\nexport default () => testExpression(expression);\n","export { default as allOk } from './allOk';\nexport { default as testExpression } from './testExpression';","export interface ExpressionObject {\n  [key: string]: boolean;\n}\n\nexport default (obj: ExpressionObject): true | string[] => {\n  const errors = [];\n\n  for (const key in obj) {\n    !obj[key] && errors.push(key);\n  }\n\n  return !errors.length || errors;\n};\n"],"names":[],"version":3,"file":"main.js.map"}